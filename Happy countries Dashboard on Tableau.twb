<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20192.19.0718.1543                               -->
<workbook original-version='18.1' source-build='2019.2.2 (20192.19.0718.1543)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='happy_changes (happy_changes)' inline='true' name='federated.0w643os06nl2h81aigltg0lwd165' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='happy_changes' name='excel-direct.1s4x5er1t2wv9a1g3vipx0d97ege'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/lutang/Desktop/BrainStation/Week_6-Unit3-Visualize (Tableau)/Assignment/happy_changes.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1s4x5er1t2wv9a1g3vipx0d97ege' name='happy_changes' table='[happy_changes$]' type='table'>
          <columns gridOrigin='A1:D133:no:A1:D133:0' header='yes' outcome='6'>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='real' name='Changes in happiness scores' ordinal='1' />
            <column datatype='real' name='Whisker-high' ordinal='2' />
            <column datatype='real' name='Whisker-low' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[happy_changes]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Changes in happiness scores</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Changes in happiness scores]</local-name>
            <parent-name>[happy_changes]</parent-name>
            <remote-alias>Changes in happiness scores</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Whisker-high</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Whisker-high]</local-name>
            <parent-name>[happy_changes]</parent-name>
            <remote-alias>Whisker-high</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Whisker-low</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Whisker-low]</local-name>
            <parent-name>[happy_changes]</parent-name>
            <remote-alias>Whisker-low</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[happy_changes]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D133:no:A1:D133:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <group caption='Action (Country)' hidden='true' name='[Action (Country)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.399614' measure-ordering='alphabetic' measure-percentage='0.600386' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='happy_report (happy_report)' inline='true' name='federated.1bj9cle182xhqq10bi32k0uoqjbv' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='happy_report' name='excel-direct.1b1qtk90i1e87110gqlhz09jc3ou'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/lutang/Desktop/BrainStation/Week_6-Unit3-Visualize (Tableau)/Assignment/happy_report.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1b1qtk90i1e87110gqlhz09jc3ou' name='happy_report' table='[happy_report$]' type='table'>
          <columns gridOrigin='A1:K1585:no:A1:K1585:0' header='yes' outcome='6'>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='real' name='Life Ladder' ordinal='2' />
            <column datatype='real' name='Log GDP per capita' ordinal='3' />
            <column datatype='real' name='Social support' ordinal='4' />
            <column datatype='real' name='Healthy life expectancy at birth' ordinal='5' />
            <column datatype='real' name='Freedom to make life choices' ordinal='6' />
            <column datatype='real' name='Generosity' ordinal='7' />
            <column datatype='real' name='Perceptions of corruption' ordinal='8' />
            <column datatype='string' name='Region' ordinal='9' />
            <column datatype='integer' name='Population' ordinal='10' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[happy_report]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[happy_report]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Life Ladder</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Life Ladder]</local-name>
            <parent-name>[happy_report]</parent-name>
            <remote-alias>Life Ladder</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Log GDP per capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Log GDP per capita]</local-name>
            <parent-name>[happy_report]</parent-name>
            <remote-alias>Log GDP per capita</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Social support</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Social support]</local-name>
            <parent-name>[happy_report]</parent-name>
            <remote-alias>Social support</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Healthy life expectancy at birth</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Healthy life expectancy at birth]</local-name>
            <parent-name>[happy_report]</parent-name>
            <remote-alias>Healthy life expectancy at birth</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Freedom to make life choices</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Freedom to make life choices]</local-name>
            <parent-name>[happy_report]</parent-name>
            <remote-alias>Freedom to make life choices</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Generosity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Generosity]</local-name>
            <parent-name>[happy_report]</parent-name>
            <remote-alias>Generosity</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Perceptions of corruption</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Perceptions of corruption]</local-name>
            <parent-name>[happy_report]</parent-name>
            <remote-alias>Perceptions of corruption</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[happy_report]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[happy_report]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[happy_report]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:K1585:no:A1:K1585:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <group caption='Action (Country)' hidden='true' name='[Action (Country)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.337838' measure-ordering='alphabetic' measure-percentage='0.662162' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Region:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Middle East and Northern Africa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Western Europe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latin America and Caribbean&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Sub-Saharan Africa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Central and Eastern Europe&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='happy_2019 (happy_2019)' inline='true' name='federated.035j8u603yb66g1b4ehfl08lx5yp' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='happy_2019' name='excel-direct.129qdfx1y04vdj1h55ejn01guy6k'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/lutang/Desktop/BrainStation/Week_6-Unit3-Visualize (Tableau)/Assignment/happy_2019.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.129qdfx1y04vdj1h55ejn01guy6k' name='happy_2019' table='[happy_2019$]' type='table'>
          <columns gridOrigin='A1:K157:no:A1:K157:0' header='yes' outcome='6'>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='real' name='Happiness score' ordinal='1' />
            <column datatype='real' name='Whisker-high' ordinal='2' />
            <column datatype='real' name='Whisker-low' ordinal='3' />
            <column datatype='real' name='Dystopia (1.88) + residual' ordinal='4' />
            <column datatype='real' name='Explained by: GDP per capita' ordinal='5' />
            <column datatype='real' name='Explained by: Social support' ordinal='6' />
            <column datatype='real' name='Explained by: Healthy life expectancy' ordinal='7' />
            <column datatype='real' name='Explained by: Freedom to make life choices' ordinal='8' />
            <column datatype='real' name='Explained by: Generosity' ordinal='9' />
            <column datatype='real' name='Explained by: Perceptions of corruption' ordinal='10' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[happy_2019]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Happiness score</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Happiness score]</local-name>
            <parent-name>[happy_2019]</parent-name>
            <remote-alias>Happiness score</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Whisker-high</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Whisker-high]</local-name>
            <parent-name>[happy_2019]</parent-name>
            <remote-alias>Whisker-high</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Whisker-low</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Whisker-low]</local-name>
            <parent-name>[happy_2019]</parent-name>
            <remote-alias>Whisker-low</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Dystopia (1.88) + residual</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Dystopia (1.88) + residual]</local-name>
            <parent-name>[happy_2019]</parent-name>
            <remote-alias>Dystopia (1.88) + residual</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Explained by: GDP per capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Explained by: GDP per capita]</local-name>
            <parent-name>[happy_2019]</parent-name>
            <remote-alias>Explained by: GDP per capita</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Explained by: Social support</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Explained by: Social support]</local-name>
            <parent-name>[happy_2019]</parent-name>
            <remote-alias>Explained by: Social support</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Explained by: Healthy life expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Explained by: Healthy life expectancy]</local-name>
            <parent-name>[happy_2019]</parent-name>
            <remote-alias>Explained by: Healthy life expectancy</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Explained by: Freedom to make life choices</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Explained by: Freedom to make life choices]</local-name>
            <parent-name>[happy_2019]</parent-name>
            <remote-alias>Explained by: Freedom to make life choices</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Explained by: Generosity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Explained by: Generosity]</local-name>
            <parent-name>[happy_2019]</parent-name>
            <remote-alias>Explained by: Generosity</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Explained by: Perceptions of corruption</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Explained by: Perceptions of corruption]</local-name>
            <parent-name>[happy_2019]</parent-name>
            <remote-alias>Explained by: Perceptions of corruption</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[happy_2019]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:K157:no:A1:K157:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='real' name='[Dystopia (1.88) + residual]' role='measure' type='quantitative' />
      <column datatype='real' name='[Explained by: Freedom to make life choices]' role='measure' type='quantitative' />
      <column datatype='real' name='[Explained by: GDP per capita]' role='measure' type='quantitative' />
      <column datatype='real' name='[Explained by: Generosity]' role='measure' type='quantitative' />
      <column datatype='real' name='[Explained by: Healthy life expectancy]' role='measure' type='quantitative' />
      <column datatype='real' name='[Explained by: Perceptions of corruption]' role='measure' type='quantitative' />
      <column datatype='real' name='[Explained by: Social support]' role='measure' type='quantitative' />
      <column datatype='real' name='[Happiness score]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' name='[Whisker-high]' role='measure' type='quantitative' />
      <column datatype='real' name='[Whisker-low]' role='measure' type='quantitative' />
      <column-instance column='[Dystopia (1.88) + residual]' derivation='Sum' name='[sum:Dystopia (1.88) + residual:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Explained by: Freedom to make life choices]' derivation='Sum' name='[sum:Explained by: Freedom to make life choices:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Explained by: GDP per capita]' derivation='Sum' name='[sum:Explained by: GDP per capita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Explained by: Generosity]' derivation='Sum' name='[sum:Explained by: Generosity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Explained by: Healthy life expectancy]' derivation='Sum' name='[sum:Explained by: Healthy life expectancy:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Explained by: Perceptions of corruption]' derivation='Sum' name='[sum:Explained by: Perceptions of corruption:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Explained by: Social support]' derivation='Sum' name='[sum:Explained by: Social support:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Happiness score]' derivation='Sum' name='[sum:Happiness score:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Whisker-high]' derivation='Sum' name='[sum:Whisker-high:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Whisker-low]' derivation='Sum' name='[sum:Whisker-low:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Country)' hidden='true' name='[Action (Country)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/lutang/Documents/My Tableau Repository/Datasources/happy_2019 (happy_2019).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='07/30/2019 12:01:29 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='happy_2019 (happy_2019)' increment-value='%null%' refresh-type='create' rows-inserted='156' timestamp-start='2019-07-30 00:01:29.789' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>0</ordinal>
              <family>happy_2019</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>156</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Happiness score</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Happiness score]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Happiness score</remote-alias>
              <ordinal>1</ordinal>
              <family>happy_2019</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>156</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Whisker-high</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Whisker-high]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Whisker-high</remote-alias>
              <ordinal>2</ordinal>
              <family>happy_2019</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>156</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Whisker-low</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Whisker-low]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Whisker-low</remote-alias>
              <ordinal>3</ordinal>
              <family>happy_2019</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>156</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Dystopia (1.88) + residual</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Dystopia (1.88) + residual]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Dystopia (1.88) + residual</remote-alias>
              <ordinal>4</ordinal>
              <family>happy_2019</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>156</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Explained by: GDP per capita</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Explained by: GDP per capita]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Explained by: GDP per capita</remote-alias>
              <ordinal>5</ordinal>
              <family>happy_2019</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>155</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Explained by: Social support</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Explained by: Social support]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Explained by: Social support</remote-alias>
              <ordinal>6</ordinal>
              <family>happy_2019</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>156</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Explained by: Healthy life expectancy</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Explained by: Healthy life expectancy]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Explained by: Healthy life expectancy</remote-alias>
              <ordinal>7</ordinal>
              <family>happy_2019</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>154</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Explained by: Freedom to make life choices</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Explained by: Freedom to make life choices]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Explained by: Freedom to make life choices</remote-alias>
              <ordinal>8</ordinal>
              <family>happy_2019</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>156</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Explained by: Generosity</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Explained by: Generosity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Explained by: Generosity</remote-alias>
              <ordinal>9</ordinal>
              <family>happy_2019</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>156</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Explained by: Perceptions of corruption</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Explained by: Perceptions of corruption]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Explained by: Perceptions of corruption</remote-alias>
              <ordinal>10</ordinal>
              <family>happy_2019</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>156</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.258621' measure-ordering='alphabetic' measure-percentage='0.741379' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.035j8u603yb66g1b4ehfl08lx5yp].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.035j8u603yb66g1b4ehfl08lx5yp].[sum:Dystopia (1.88) + residual:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.035j8u603yb66g1b4ehfl08lx5yp].[sum:Explained by: Healthy life expectancy:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.035j8u603yb66g1b4ehfl08lx5yp].[sum:Whisker-high:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.035j8u603yb66g1b4ehfl08lx5yp].[sum:Explained by: Perceptions of corruption:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.035j8u603yb66g1b4ehfl08lx5yp].[sum:Explained by: Freedom to make life choices:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.035j8u603yb66g1b4ehfl08lx5yp].[sum:Explained by: Social support:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.035j8u603yb66g1b4ehfl08lx5yp].[sum:Whisker-low:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.035j8u603yb66g1b4ehfl08lx5yp].[sum:Happiness score:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.035j8u603yb66g1b4ehfl08lx5yp].[sum:Explained by: GDP per capita:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.035j8u603yb66g1b4ehfl08lx5yp].[sum:Explained by: Generosity:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Happy Dashboard' type='sheet' worksheet='Happy Map 2019' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Happy Dashboard' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Factor Changes'>
      <table>
        <view>
          <datasources>
            <datasource caption='happy_report (happy_report)' name='federated.1bj9cle182xhqq10bi32k0uoqjbv' />
          </datasources>
          <datasource-dependencies datasource='federated.1bj9cle182xhqq10bi32k0uoqjbv'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Generosity]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Generosity]' derivation='Sum' name='[sum:Generosity:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1bj9cle182xhqq10bi32k0uoqjbv].[:Measure Names]'>
            <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1bj9cle182xhqq10bi32k0uoqjbv].[sum:Generosity:qk]&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1bj9cle182xhqq10bi32k0uoqjbv].[none:Country:nk]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;Canada&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1bj9cle182xhqq10bi32k0uoqjbv].[none:Country:nk]</column>
            <column>[federated.1bj9cle182xhqq10bi32k0uoqjbv].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='9' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1bj9cle182xhqq10bi32k0uoqjbv].[none:Country:nk]' />
              <text column='[federated.1bj9cle182xhqq10bi32k0uoqjbv].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1bj9cle182xhqq10bi32k0uoqjbv].[Multiple Values]</rows>
        <cols>[federated.1bj9cle182xhqq10bi32k0uoqjbv].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{7D89EC73-A0D4-42FD-A4E9-C0ADA3F913BA}' />
    </worksheet>
    <worksheet name='Happy Changes'>
      <table>
        <view>
          <datasources>
            <datasource caption='happy_changes (happy_changes)' name='federated.0w643os06nl2h81aigltg0lwd165' />
          </datasources>
          <datasource-dependencies datasource='federated.0w643os06nl2h81aigltg0lwd165'>
            <column datatype='real' name='[Changes in happiness scores]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Changes in happiness scores]' derivation='Sum' name='[sum:Changes in happiness scores:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0w643os06nl2h81aigltg0lwd165].[none:Country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0w643os06nl2h81aigltg0lwd165].[sum:Changes in happiness scores:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0w643os06nl2h81aigltg0lwd165].[sum:Changes in happiness scores:qk]' />
              <lod column='[federated.0w643os06nl2h81aigltg0lwd165].[:Measure Names]' />
              <text column='[federated.0w643os06nl2h81aigltg0lwd165].[sum:Changes in happiness scores:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0w643os06nl2h81aigltg0lwd165].[none:Country:nk]</rows>
        <cols>[federated.0w643os06nl2h81aigltg0lwd165].[sum:Changes in happiness scores:qk]</cols>
      </table>
      <simple-id uuid='{1EDD8294-1C73-4527-AEDF-C8D4F33990DB}' />
    </worksheet>
    <worksheet name='Happy Changes on Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Happy Changes on Map&#10;</run>
            <run fontsize='11'>(Changes measure from 2005-2008 to 2016-2018)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='happy_changes (happy_changes)' name='federated.0w643os06nl2h81aigltg0lwd165' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0w643os06nl2h81aigltg0lwd165'>
            <column datatype='real' name='[Changes in happiness scores]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Changes in happiness scores]' derivation='Sum' name='[sum:Changes in happiness scores:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0w643os06nl2h81aigltg0lwd165].[Action (Country)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0w643os06nl2h81aigltg0lwd165].[Action (Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0w643os06nl2h81aigltg0lwd165].[sum:Changes in happiness scores:qk]' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
            <format attr='map-snap-zoom' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0w643os06nl2h81aigltg0lwd165].[sum:Changes in happiness scores:qk]' />
              <size column='[federated.0w643os06nl2h81aigltg0lwd165].[sum:Changes in happiness scores:qk]' />
              <text column='[federated.0w643os06nl2h81aigltg0lwd165].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0w643os06nl2h81aigltg0lwd165].[Latitude (generated)]</rows>
        <cols>[federated.0w643os06nl2h81aigltg0lwd165].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{699F395C-F578-4BC2-968F-81559C18A69B}' />
    </worksheet>
    <worksheet name='Happy Map 2019'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Happy Map 2019</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='happy_2019 (happy_2019)' name='federated.035j8u603yb66g1b4ehfl08lx5yp' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.035j8u603yb66g1b4ehfl08lx5yp'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Happiness score]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Happiness score]' derivation='Sum' name='[sum:Happiness score:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.035j8u603yb66g1b4ehfl08lx5yp].[sum:Happiness score:qk]' palette='orange_blue_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
            <format attr='map-snap-zoom' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.035j8u603yb66g1b4ehfl08lx5yp].[sum:Happiness score:qk]' />
              <size column='[federated.035j8u603yb66g1b4ehfl08lx5yp].[sum:Happiness score:qk]' />
              <text column='[federated.035j8u603yb66g1b4ehfl08lx5yp].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.035j8u603yb66g1b4ehfl08lx5yp].[Latitude (generated)]</rows>
        <cols>[federated.035j8u603yb66g1b4ehfl08lx5yp].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{CFF3DEC1-E8E3-458A-B597-BB141CC75775}' />
    </worksheet>
    <worksheet name='Happy Rank'>
      <table>
        <view>
          <datasources>
            <datasource caption='happy_2019 (happy_2019)' name='federated.035j8u603yb66g1b4ehfl08lx5yp' />
          </datasources>
          <datasource-dependencies datasource='federated.035j8u603yb66g1b4ehfl08lx5yp'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Dystopia (1.88) + residual]' role='measure' type='quantitative' />
            <column datatype='real' name='[Explained by: Freedom to make life choices]' role='measure' type='quantitative' />
            <column datatype='real' name='[Explained by: GDP per capita]' role='measure' type='quantitative' />
            <column datatype='real' name='[Explained by: Generosity]' role='measure' type='quantitative' />
            <column datatype='real' name='[Explained by: Healthy life expectancy]' role='measure' type='quantitative' />
            <column datatype='real' name='[Explained by: Perceptions of corruption]' role='measure' type='quantitative' />
            <column datatype='real' name='[Explained by: Social support]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Dystopia (1.88) + residual]' derivation='Sum' name='[sum:Dystopia (1.88) + residual:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Explained by: Freedom to make life choices]' derivation='Sum' name='[sum:Explained by: Freedom to make life choices:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Explained by: GDP per capita]' derivation='Sum' name='[sum:Explained by: GDP per capita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Explained by: Generosity]' derivation='Sum' name='[sum:Explained by: Generosity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Explained by: Healthy life expectancy]' derivation='Sum' name='[sum:Explained by: Healthy life expectancy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Explained by: Perceptions of corruption]' derivation='Sum' name='[sum:Explained by: Perceptions of corruption:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Explained by: Social support]' derivation='Sum' name='[sum:Explained by: Social support:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.035j8u603yb66g1b4ehfl08lx5yp].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.035j8u603yb66g1b4ehfl08lx5yp].[sum:Dystopia (1.88) + residual:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.035j8u603yb66g1b4ehfl08lx5yp].[sum:Explained by: Freedom to make life choices:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.035j8u603yb66g1b4ehfl08lx5yp].[sum:Explained by: GDP per capita:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.035j8u603yb66g1b4ehfl08lx5yp].[sum:Explained by: Generosity:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.035j8u603yb66g1b4ehfl08lx5yp].[sum:Explained by: Healthy life expectancy:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.035j8u603yb66g1b4ehfl08lx5yp].[sum:Explained by: Perceptions of corruption:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.035j8u603yb66g1b4ehfl08lx5yp].[sum:Explained by: Social support:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.035j8u603yb66g1b4ehfl08lx5yp].[Action (Country)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.035j8u603yb66g1b4ehfl08lx5yp].[none:Country:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Finland&quot;</bucket>
              <bucket>&quot;Denmark&quot;</bucket>
              <bucket>&quot;Norway&quot;</bucket>
              <bucket>&quot;Iceland&quot;</bucket>
              <bucket>&quot;Netherlands&quot;</bucket>
              <bucket>&quot;Switzerland&quot;</bucket>
              <bucket>&quot;Sweden&quot;</bucket>
              <bucket>&quot;New Zealand&quot;</bucket>
              <bucket>&quot;Canada&quot;</bucket>
              <bucket>&quot;Austria&quot;</bucket>
              <bucket>&quot;Australia&quot;</bucket>
              <bucket>&quot;Costa Rica&quot;</bucket>
              <bucket>&quot;Israel&quot;</bucket>
              <bucket>&quot;Luxembourg&quot;</bucket>
              <bucket>&quot;United Kingdom&quot;</bucket>
              <bucket>&quot;Ireland&quot;</bucket>
              <bucket>&quot;Germany&quot;</bucket>
              <bucket>&quot;Belgium&quot;</bucket>
              <bucket>&quot;United States&quot;</bucket>
              <bucket>&quot;Czech Republic&quot;</bucket>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
              <bucket>&quot;Malta&quot;</bucket>
              <bucket>&quot;Mexico&quot;</bucket>
              <bucket>&quot;France&quot;</bucket>
              <bucket>&quot;Taiwan Province of China&quot;</bucket>
              <bucket>&quot;Chile&quot;</bucket>
              <bucket>&quot;Guatemala&quot;</bucket>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
              <bucket>&quot;Qatar&quot;</bucket>
              <bucket>&quot;Spain&quot;</bucket>
              <bucket>&quot;Panama&quot;</bucket>
              <bucket>&quot;Brazil&quot;</bucket>
              <bucket>&quot;Uruguay&quot;</bucket>
              <bucket>&quot;Singapore&quot;</bucket>
              <bucket>&quot;El Salvador&quot;</bucket>
              <bucket>&quot;Italy&quot;</bucket>
              <bucket>&quot;Bahrain&quot;</bucket>
              <bucket>&quot;Slovakia&quot;</bucket>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
              <bucket>&quot;Poland&quot;</bucket>
              <bucket>&quot;Uzbekistan&quot;</bucket>
              <bucket>&quot;Lithuania&quot;</bucket>
              <bucket>&quot;Colombia&quot;</bucket>
              <bucket>&quot;Slovenia&quot;</bucket>
              <bucket>&quot;Nicaragua&quot;</bucket>
              <bucket>&quot;Kosovo&quot;</bucket>
              <bucket>&quot;Argentina&quot;</bucket>
              <bucket>&quot;Romania&quot;</bucket>
              <bucket>&quot;Cyprus&quot;</bucket>
              <bucket>&quot;Ecuador&quot;</bucket>
              <bucket>&quot;Kuwait&quot;</bucket>
              <bucket>&quot;Thailand&quot;</bucket>
              <bucket>&quot;Latvia&quot;</bucket>
              <bucket>&quot;South Korea&quot;</bucket>
              <bucket>&quot;Estonia&quot;</bucket>
              <bucket>&quot;Jamaica&quot;</bucket>
              <bucket>&quot;Mauritius&quot;</bucket>
              <bucket>&quot;Japan&quot;</bucket>
              <bucket>&quot;Honduras&quot;</bucket>
              <bucket>&quot;Kazakhstan&quot;</bucket>
              <bucket>&quot;Bolivia&quot;</bucket>
              <bucket>&quot;Hungary&quot;</bucket>
              <bucket>&quot;Paraguay&quot;</bucket>
              <bucket>&quot;North Cyprus&quot;</bucket>
              <bucket>&quot;Peru&quot;</bucket>
              <bucket>&quot;Portugal&quot;</bucket>
              <bucket>&quot;Pakistan&quot;</bucket>
              <bucket>&quot;Russia&quot;</bucket>
              <bucket>&quot;Philippines&quot;</bucket>
              <bucket>&quot;Serbia&quot;</bucket>
              <bucket>&quot;Moldova&quot;</bucket>
              <bucket>&quot;Libya&quot;</bucket>
              <bucket>&quot;Montenegro&quot;</bucket>
              <bucket>&quot;Tajikistan&quot;</bucket>
              <bucket>&quot;Croatia&quot;</bucket>
              <bucket>&quot;Hong Kong S.A.R. of China&quot;</bucket>
              <bucket>&quot;Dominican Republic&quot;</bucket>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
              <bucket>&quot;Turkey&quot;</bucket>
              <bucket>&quot;Malaysia&quot;</bucket>
              <bucket>&quot;Belarus&quot;</bucket>
              <bucket>&quot;Greece&quot;</bucket>
              <bucket>&quot;Mongolia&quot;</bucket>
              <bucket>&quot;Macedonia&quot;</bucket>
              <bucket>&quot;Nigeria&quot;</bucket>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
              <bucket>&quot;Turkmenistan&quot;</bucket>
              <bucket>&quot;Algeria&quot;</bucket>
              <bucket>&quot;Morocco&quot;</bucket>
              <bucket>&quot;Azerbaijan&quot;</bucket>
              <bucket>&quot;Lebanon&quot;</bucket>
              <bucket>&quot;Indonesia&quot;</bucket>
              <bucket>&quot;China&quot;</bucket>
              <bucket>&quot;Vietnam&quot;</bucket>
              <bucket>&quot;Bhutan&quot;</bucket>
              <bucket>&quot;Cameroon&quot;</bucket>
              <bucket>&quot;Bulgaria&quot;</bucket>
              <bucket>&quot;Ghana&quot;</bucket>
              <bucket>&quot;Ivory Coast&quot;</bucket>
              <bucket>&quot;Nepal&quot;</bucket>
              <bucket>&quot;Jordan&quot;</bucket>
              <bucket>&quot;Benin&quot;</bucket>
              <bucket>&quot;Congo (Brazzaville)&quot;</bucket>
              <bucket>&quot;Gabon&quot;</bucket>
              <bucket>&quot;Laos&quot;</bucket>
              <bucket>&quot;South Africa&quot;</bucket>
              <bucket>&quot;Albania&quot;</bucket>
              <bucket>&quot;Venezuela&quot;</bucket>
              <bucket>&quot;Cambodia&quot;</bucket>
              <bucket>&quot;Palestinian Territories&quot;</bucket>
              <bucket>&quot;Senegal&quot;</bucket>
              <bucket>&quot;Somalia&quot;</bucket>
              <bucket>&quot;Namibia&quot;</bucket>
              <bucket>&quot;Niger&quot;</bucket>
              <bucket>&quot;Burkina Faso&quot;</bucket>
              <bucket>&quot;Armenia&quot;</bucket>
              <bucket>&quot;Iran&quot;</bucket>
              <bucket>&quot;Guinea&quot;</bucket>
              <bucket>&quot;Georgia&quot;</bucket>
              <bucket>&quot;Gambia&quot;</bucket>
              <bucket>&quot;Kenya&quot;</bucket>
              <bucket>&quot;Mauritania&quot;</bucket>
              <bucket>&quot;Mozambique&quot;</bucket>
              <bucket>&quot;Tunisia&quot;</bucket>
              <bucket>&quot;Bangladesh&quot;</bucket>
              <bucket>&quot;Iraq&quot;</bucket>
              <bucket>&quot;Congo (Kinshasa)&quot;</bucket>
              <bucket>&quot;Mali&quot;</bucket>
              <bucket>&quot;Sierra Leone&quot;</bucket>
              <bucket>&quot;Sri Lanka&quot;</bucket>
              <bucket>&quot;Myanmar&quot;</bucket>
              <bucket>&quot;Chad&quot;</bucket>
              <bucket>&quot;Ukraine&quot;</bucket>
              <bucket>&quot;Ethiopia&quot;</bucket>
              <bucket>&quot;Swaziland&quot;</bucket>
              <bucket>&quot;Uganda&quot;</bucket>
              <bucket>&quot;Egypt&quot;</bucket>
              <bucket>&quot;Zambia&quot;</bucket>
              <bucket>&quot;Togo&quot;</bucket>
              <bucket>&quot;India&quot;</bucket>
              <bucket>&quot;Liberia&quot;</bucket>
              <bucket>&quot;Comoros&quot;</bucket>
              <bucket>&quot;Madagascar&quot;</bucket>
              <bucket>&quot;Lesotho&quot;</bucket>
              <bucket>&quot;Burundi&quot;</bucket>
              <bucket>&quot;Zimbabwe&quot;</bucket>
              <bucket>&quot;Haiti&quot;</bucket>
              <bucket>&quot;Botswana&quot;</bucket>
              <bucket>&quot;Syria&quot;</bucket>
              <bucket>&quot;Malawi&quot;</bucket>
              <bucket>&quot;Yemen&quot;</bucket>
              <bucket>&quot;Rwanda&quot;</bucket>
              <bucket>&quot;Tanzania&quot;</bucket>
              <bucket>&quot;Afghanistan&quot;</bucket>
              <bucket>&quot;Central African Republic&quot;</bucket>
              <bucket>&quot;South Sudan&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.035j8u603yb66g1b4ehfl08lx5yp].[:Measure Names]</column>
            <column>[federated.035j8u603yb66g1b4ehfl08lx5yp].[Action (Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.035j8u603yb66g1b4ehfl08lx5yp].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.035j8u603yb66g1b4ehfl08lx5yp].[none:Country:nk]</rows>
        <cols>[federated.035j8u603yb66g1b4ehfl08lx5yp].[Multiple Values]</cols>
      </table>
      <simple-id uuid='{B6ED22A2-856D-4A07-B043-072D1160A775}' />
    </worksheet>
    <worksheet name='Selected Countries'>
      <table>
        <view>
          <datasources>
            <datasource caption='happy_report (happy_report)' name='federated.1bj9cle182xhqq10bi32k0uoqjbv' />
          </datasources>
          <datasource-dependencies datasource='federated.1bj9cle182xhqq10bi32k0uoqjbv'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Life Ladder]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Life Ladder]' derivation='Sum' name='[sum:Life Ladder:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1bj9cle182xhqq10bi32k0uoqjbv].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;India&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1bj9cle182xhqq10bi32k0uoqjbv].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1bj9cle182xhqq10bi32k0uoqjbv].[none:Country:nk]' />
              <text column='[federated.1bj9cle182xhqq10bi32k0uoqjbv].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1bj9cle182xhqq10bi32k0uoqjbv].[sum:Life Ladder:qk]</rows>
        <cols>[federated.1bj9cle182xhqq10bi32k0uoqjbv].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{B60ED43B-EC96-4BBB-898E-DD97FFDC73BE}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Happy Dashboard'>
      <style />
      <size maxheight='600' maxwidth='800' minheight='600' minwidth='800' preset-index='3' sizing-mode='fixed' />
      <datasources>
        <datasource caption='happy_report (happy_report)' name='federated.1bj9cle182xhqq10bi32k0uoqjbv' />
      </datasources>
      <datasource-dependencies datasource='federated.1bj9cle182xhqq10bi32k0uoqjbv'>
        <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='97334' id='21' param='vert' type='layout-flow' w='98000' x='1000' y='1333'>
            <zone h='7000' id='22' type='title' w='98000' x='1000' y='1333'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='90334' id='7' param='horz' type='layout-flow' w='98000' x='1000' y='8333'>
              <zone h='90334' id='5' type='layout-basic' w='78000' x='1000' y='8333'>
                <zone h='45167' id='3' name='Happy Map 2019' w='39000' x='1000' y='8333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='45167' id='10' name='Happy Rank' w='39000' x='40000' y='8333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='45167' id='12' name='Happy Changes on Map' w='39000' x='1000' y='53500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='45167' id='15' name='Selected Countries' w='39000' x='40000' y='53500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone fixed-size='160' h='90334' id='6' is-fixed='true' param='vert' type='layout-flow' w='20000' x='79000' y='8333'>
                <zone h='10833' id='9' name='Happy Map 2019' pane-specification-id='1' param='[federated.035j8u603yb66g1b4ehfl08lx5yp].[sum:Happiness score:qk]' type='color' w='20000' x='79000' y='8333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='25501' id='11' name='Happy Rank' pane-specification-id='0' param='[federated.035j8u603yb66g1b4ehfl08lx5yp].[:Measure Names]' type='color' w='20000' x='79000' y='19166'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='10833' id='13' name='Happy Changes on Map' pane-specification-id='0' param='[federated.0w643os06nl2h81aigltg0lwd165].[sum:Changes in happiness scores:qk]' type='color' w='20000' x='79000' y='44667'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='25501' id='16' name='Selected Countries' param='[federated.1bj9cle182xhqq10bi32k0uoqjbv].[none:Country:nk]' type='filter' w='20000' x='79000' y='55500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='17666' id='17' name='Selected Countries' pane-specification-id='0' param='[federated.1bj9cle182xhqq10bi32k0uoqjbv].[none:Country:nk]' type='color' w='20000' x='79000' y='81001'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1500' minheight='1500' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='25' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='97334' id='26' param='vert' type='layout-flow' w='98000' x='1000' y='1333'>
                <zone h='7000' id='22' type='title' w='98000' x='1000' y='1333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='263' h='45167' id='3' is-fixed='true' name='Happy Map 2019' w='39000' x='1000' y='8333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10833' id='9' name='Happy Map 2019' pane-specification-id='1' param='[federated.035j8u603yb66g1b4ehfl08lx5yp].[sum:Happiness score:qk]' type='color' w='20000' x='79000' y='8333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='263' h='45167' id='10' is-fixed='true' name='Happy Rank' w='39000' x='40000' y='8333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='25501' id='11' name='Happy Rank' pane-specification-id='0' param='[federated.035j8u603yb66g1b4ehfl08lx5yp].[:Measure Names]' type='color' w='20000' x='79000' y='19166'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='263' h='45167' id='12' is-fixed='true' name='Happy Changes on Map' w='39000' x='1000' y='53500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10833' id='13' name='Happy Changes on Map' pane-specification-id='0' param='[federated.0w643os06nl2h81aigltg0lwd165].[sum:Changes in happiness scores:qk]' type='color' w='20000' x='79000' y='44667'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='25501' id='16' mode='checkdropdown' name='Selected Countries' param='[federated.1bj9cle182xhqq10bi32k0uoqjbv].[none:Country:nk]' type='filter' w='20000' x='79000' y='55500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='263' h='45167' id='15' is-fixed='true' name='Selected Countries' w='39000' x='40000' y='53500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='17666' id='17' name='Selected Countries' pane-specification-id='0' param='[federated.1bj9cle182xhqq10bi32k0uoqjbv].[none:Country:nk]' type='color' w='20000' x='79000' y='81001'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{6ABCAAAB-0EF9-4C1A-A8A4-17F7109D845A}' />
    </dashboard>
    <dashboard name='Happy Story' type='storyboard'>
      <style>
        <style-rule element='story-point-caption'>
          <format attr='width' value='126' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='97634' id='1' param='vert' removable='false' type='layout-flow' w='98698' x='651' y='1183'>
            <zone fixed-size='97' h='14349' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='98698' x='651' y='1183' />
            <zone h='83285' id='5' paired-zone-id='4' removable='false' type='flipboard' w='98698' x='651' y='15532'>
              <flipboard active-id='10' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='The Happy Report' captured-sheet='' id='2' />
                  <story-point caption='Where are the happy people?' captured-sheet='Happy Map 2019' id='3'>
                    <capturedDeltas>
                      <worksheet name='Happy Map 2019'>
                        <selection-collection />
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='What makes? them happy' captured-sheet='Happy Rank' id='5' />
                  <story-point caption='Are happy country still happy?' captured-sheet='Happy Changes' id='6' />
                  <story-point caption='Where are the changes?' captured-sheet='Happy Changes on Map' id='7' />
                  <story-point caption='How about our hometown?' captured-sheet='Selected Countries' id='8' />
                  <story-point caption='What makes the changes?' captured-sheet='Factor Changes' id='9' />
                  <story-point caption='Happy Dashboard' captured-sheet='Happy Dashboard' id='10'>
                    <capturedDeltas>
                      <worksheet name='Factor Changes'>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1bj9cle182xhqq10bi32k0uoqjbv].[none:Year:qk]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1bj9cle182xhqq10bi32k0uoqjbv].[Multiple Values]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1bj9cle182xhqq10bi32k0uoqjbv].[none:Country:nk]</field>
                                  <field>[federated.1bj9cle182xhqq10bi32k0uoqjbv].[none:Year:qk]</field>
                                  <field>[federated.1bj9cle182xhqq10bi32k0uoqjbv].[:Measure Names]</field>
                                  <field>[federated.1bj9cle182xhqq10bi32k0uoqjbv].[Multiple Values]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>&quot;Canada&quot;</value>
                                <value>2008</value>
                                <value>&quot;[federated.1bj9cle182xhqq10bi32k0uoqjbv].[sum:Generosity:qk]&quot;</value>
                                <value>0.25404444336891102</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone flipboard-zone-id='5' h='38174' hidden='true' id='6' story-point-id='2' type='text' w='76673' x='10925' y='20747'>
          <formatted-text>
            <run fontsize='72'>Are you happy?</run>
          </formatted-text>
        </zone>
      </zones>
      <simple-id uuid='{A7531A89-B843-4AF1-B713-796D667677DC}' />
    </dashboard>
  </dashboards>
  <windows source-height='72'>
    <window class='worksheet' name='Happy Map 2019'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.035j8u603yb66g1b4ehfl08lx5yp].[sum:Happiness score:qk]' type='size' />
            <card pane-specification-id='1' param='[federated.035j8u603yb66g1b4ehfl08lx5yp].[sum:Happiness score:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.035j8u603yb66g1b4ehfl08lx5yp].[Longitude (generated)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.035j8u603yb66g1b4ehfl08lx5yp].[Latitude (generated)]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.035j8u603yb66g1b4ehfl08lx5yp].[none:Country:nk]</field>
                  <field>[federated.035j8u603yb66g1b4ehfl08lx5yp].[sum:Happiness score:qk]</field>
                  <field>[federated.035j8u603yb66g1b4ehfl08lx5yp].[Latitude (generated)]</field>
                  <field>[federated.035j8u603yb66g1b4ehfl08lx5yp].[Longitude (generated)]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Albania&quot;</value>
                <value>4.718599796295166</value>
                <value>40.654000000000003</value>
                <value>20.076000000000001</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.035j8u603yb66g1b4ehfl08lx5yp].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5ED7D972-BD78-47E6-BF6B-7FFCD420A99C}' />
    </window>
    <window class='worksheet' name='Happy Rank'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.035j8u603yb66g1b4ehfl08lx5yp].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.035j8u603yb66g1b4ehfl08lx5yp].[:Measure Names]</field>
            <field>[federated.035j8u603yb66g1b4ehfl08lx5yp].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{97E2F88D-7645-4E84-A69F-B1AE81FFA74C}' />
    </window>
    <window class='worksheet' name='Happy Changes'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0w643os06nl2h81aigltg0lwd165].[sum:Changes in happiness scores:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0w643os06nl2h81aigltg0lwd165].[:Measure Names]</field>
            <field>[federated.0w643os06nl2h81aigltg0lwd165].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4C8A94B9-FA54-46C7-8D65-35AA376D2B63}' />
    </window>
    <window class='worksheet' name='Happy Changes on Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0w643os06nl2h81aigltg0lwd165].[sum:Changes in happiness scores:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.0w643os06nl2h81aigltg0lwd165].[sum:Changes in happiness scores:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0w643os06nl2h81aigltg0lwd165].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4C55C283-D4F2-4BF7-B3FE-6BC04CDD2C8A}' />
    </window>
    <window class='worksheet' name='Selected Countries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1bj9cle182xhqq10bi32k0uoqjbv].[none:Country:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1bj9cle182xhqq10bi32k0uoqjbv].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1bj9cle182xhqq10bi32k0uoqjbv].[none:Country:nk]</field>
            <field>[federated.1bj9cle182xhqq10bi32k0uoqjbv].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{806D1515-818F-4816-BEE4-DDA7085F0564}' />
    </window>
    <window class='worksheet' name='Factor Changes'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1bj9cle182xhqq10bi32k0uoqjbv].[:Measure Names]' show-morefewerbutton='false' type='filter' />
            <card mode='radiolist' param='[federated.1bj9cle182xhqq10bi32k0uoqjbv].[none:Country:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1bj9cle182xhqq10bi32k0uoqjbv].[:Measure Names]</field>
            <field>[federated.1bj9cle182xhqq10bi32k0uoqjbv].[none:Country:nk]</field>
            <field>[federated.1bj9cle182xhqq10bi32k0uoqjbv].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4FFBC2F8-50AC-4B1C-9616-0E02E2C6DBF0}' />
    </window>
    <window class='dashboard' maximized='true' name='Happy Dashboard'>
      <viewpoints>
        <viewpoint name='Happy Changes on Map'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Happy Map 2019'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Happy Rank' />
        <viewpoint name='Selected Countries'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1bj9cle182xhqq10bi32k0uoqjbv].[none:Country:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{44243DF3-9432-4652-A5AD-8344BC2BA845}' />
    </window>
    <window class='dashboard' name='Happy Story'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{F5E62FA4-FCBD-4538-802F-F1FFD2D16B0D}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Factor Changes' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Happy Changes' width='192'>
      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
      l0dlj8ZSqcMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Happy Changes on Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Happy Dashboard' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Happy Map 2019' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='99' name='Happy Rank' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Happy Story' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Selected Countries' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
